{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset204 PTSerif-Regular;\f2\fnil\fcharset204 PTMono-Regular;
\f3\fnil\fcharset204 PTSerif-Italic;}
{\colortbl;\red255\green255\blue255;\red0\green128\blue64;\red255\green128\blue0;}
{\*\expandedcolortbl;;\csgenericrgb\c0\c50196\c25098;\csgenericrgb\c100000\c50196\c0;}
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\sl288\slmult1\sa200\pardirnatural\partightenfactor0

\f0\fs24 \cf0 <$Scr_Ps::0>
\f1\fs28 I wrote the Python module `Textatistic` to transparently calculate the readability scores in this study. The code and documentation are available on 
\f0\fs24 \cf2 <$Scr_Cs::1>
\f2\fs28 [GitHub]({\field{\*\fldinst{HYPERLINK "https://github.com/erinhengel/Textatistic"}}{\fldrslt \cf2 https://github.com/erinhengel/Textatistic}})
\f0\fs24 \cf0 <!$Scr_Cs::1>
\f1\fs28 ; I provide a brief description here.\
To determine sentence count, the program replaces common abbreviations with their full {\field{\*\fldinst{HYPERLINK "scrivcmt://A4B468AC-4259-4EFC-AA8E-413946B2721C"}}{\fldrslt text,}} decimals with a zero and deletes question and exclamation marks used in an obvious, mid-sentence rhetorical {\field{\*\fldinst{HYPERLINK "scrivcmt://F36311E1-3AA0-4609-BA4E-0FEEDE0C0FA5"}}{\fldrslt manner.}} The remaining full stops, exclamation and question marks are assumed to end a sentence and counted.\

\f0\fs24 <!$Scr_Ps::0>
\f1\fs28 Next, hyphens are deleted from commonly hyphenated single words such as "co-author" and the rest are replaced with spaces, remaining punctuation is removed and words are split into an array based on whitespace. Word count is the length of that {\field{\*\fldinst{HYPERLINK "scrivcmt://DE56FEE4-0C1F-4491-803A-5D5D472E4E25"}}{\fldrslt array.}}\
An attempt is made to match each word to one on an expanded Dale-Chall list. The count of difficult words is the number that are not found. This expanded list, available on 
\f0\fs24 \cf2 <$Scr_Cs::1>
\f2\fs28 [GitHub]({\field{\*\fldinst{HYPERLINK "https://github.com"}}{\fldrslt \cf2 https://github.com/erinhengel/Textatistic}})
\f0\fs24 \cf0 <!$Scr_Cs::1>
\f1\fs28 , consists of 8,490 words. It is based on the original 3,000 words, but also includes verb tenses, comparative and superlative adjective forms, plural nouns, *
\f3\i etc.
\f1\i0 * It was created by first adding to the Dale-Chall list every conceivable alternate form of each word using Python's Pattern library. To eliminate nonsense words, the text of 94 English novels published online with Project Gutenberg were matched with words on the expanded list. Words not found in any of the novels were deleted.\
Syllable counts are based on the C library `libhyphen`, an implementation of the hyphenation algorithm from
\f0\fs24 \cf2 <$Scr_Cs::1>
\f2\fs28 [#Liang1983;]
\f0\fs24 \cf0 <!$Scr_Cs::1>
\f1\fs28 . 
\f0\fs24 \cf2 <$Scr_Cs::1>
\f2\fs28 [#Liang1983;]
\f0\fs24 \cf0 <!$Scr_Cs::1>
\f1\fs28 's algorithm is used by 
\f0\fs24 \cf3 <$Scr_Cs::2>
\f2\fs28 <!--\\TeX-->
\f0\fs24 \cf0 <!$Scr_Cs::2>
\f1\fs28 's typesetting system. `libhyphen` is employed by most open source text processing software, including OpenOffice.}